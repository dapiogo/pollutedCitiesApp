{"ast":null,"code":"var _jsxFileName = \"/Users/dawidgola/Desktop/pollutedCitiesApp/src/components/AutocompleteInput/Autocomplete.js\";\nimport React from \"react\";\nimport styled from \"../AutocompleteInput/Autocomplete.module.scss\";\n\nvar Autocomplete = function Autocomplete(_ref) {\n  var onChange = _ref.onChange,\n      onClick = _ref.onClick,\n      onKeyDown = _ref.onKeyDown,\n      data = _ref.data;\n  var filteredSuggestions = data.filteredSuggestions,\n      showSuggestions = data.showSuggestions,\n      value = data.value;\n  var suggestionsListComponent;\n\n  if (showSuggestions && value) {\n    if (filteredSuggestions.length) {\n      suggestionsListComponent = React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, filteredSuggestions.map(function (_ref2) {\n        var country = _ref2.country,\n            code = _ref2.code;\n        return React.createElement(\"li\", {\n          key: code,\n          onClick: onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, country);\n      }));\n    } else {\n      suggestionsListComponent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"No suggestions\"));\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), suggestionsListComponent);\n};\n\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/dawidgola/Desktop/pollutedCitiesApp/src/components/AutocompleteInput/Autocomplete.js"],"names":["React","styled","Autocomplete","onChange","onClick","onKeyDown","data","filteredSuggestions","showSuggestions","value","suggestionsListComponent","length","map","country","code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,+CAAnB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA4C;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAAA,MACvDC,mBADuD,GACPD,IADO,CACvDC,mBADuD;AAAA,MAClCC,eADkC,GACPF,IADO,CAClCE,eADkC;AAAA,MACjBC,KADiB,GACPH,IADO,CACjBG,KADiB;AAG/D,MAAIC,wBAAJ;;AAEA,MAAIF,eAAe,IAAIC,KAAvB,EAA8B;AAC5B,QAAIF,mBAAmB,CAACI,MAAxB,EAAgC;AAC9BD,MAAAA,wBAAwB,GACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,mBAAmB,CAACK,GAApB,CAAwB,iBAAuB;AAAA,YAApBC,OAAoB,SAApBA,OAAoB;AAAA,YAAXC,IAAW,SAAXA,IAAW;AAC9C,eACE;AAAI,UAAA,GAAG,EAAEA,IAAT;AAAe,UAAA,OAAO,EAAEV,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGS,OADH,CADF;AAKD,OANA,CADH,CADF;AAWD,KAZD,MAYO;AACLH,MAAAA,wBAAwB,GACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF;AAKD;AACF;;AAED,SACE,0CACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAEP,QAFZ;AAGE,IAAA,SAAS,EAAEE,SAHb;AAIE,IAAA,KAAK,EAAEI,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGC,wBAPH,CADF;AAWD,CAtCD;;AAwCA,eAAeR,YAAf","sourcesContent":["import React from \"react\";\nimport styled from \"../AutocompleteInput/Autocomplete.module.scss\";\n\nconst Autocomplete = ({ onChange, onClick, onKeyDown, data }) => {\n  const { filteredSuggestions, showSuggestions, value } = data;\n\n  let suggestionsListComponent;\n\n  if (showSuggestions && value) {\n    if (filteredSuggestions.length) {\n      suggestionsListComponent = (\n        <ul>\n          {filteredSuggestions.map(({ country, code }) => {\n            return (\n              <li key={code} onClick={onClick}>\n                {country}\n              </li>\n            );\n          })}\n        </ul>\n      );\n    } else {\n      suggestionsListComponent = (\n        <div>\n          <em>No suggestions</em>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        value={value}\n      />\n      {suggestionsListComponent}\n    </>\n  );\n};\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}