{"ast":null,"code":"import _slicedToArray from \"/Users/dawidgola/Desktop/pollutedCitiesApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/dawidgola/Desktop/pollutedCitiesApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dawidgola/Desktop/pollutedCitiesApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dawidgola/Desktop/pollutedCitiesApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dawidgola/Desktop/pollutedCitiesApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dawidgola/Desktop/pollutedCitiesApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dawidgola/Desktop/pollutedCitiesApp/src/components/App/App.js\";\nimport React, { Component } from \"react\";\nimport Autocomplete from \"../AutocompleteInput/Autocomplete\";\nimport Header from \"../Header/Header\";\nimport List from \"../List/List\";\nimport Loader from \"../Loader/Loader\";\nimport { countries } from \"../../assets/dataCountry/dataCountry\";\nimport { getAllPollutedCities } from \"../../assets/api/api\";\nimport { filteredSuggestions as filterSugest, getFullDate as fullDate, removeDuplicateValues } from \"../../assets/helpers/helper\";\nimport styled from \"../App/app.module.scss\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      value: localStorage.getItem('value') || '',\n      dataCity: [],\n      isLoading: false\n    };\n\n    _this.onChangeAutocomplete = function (e) {\n      var value = e.target.value;\n\n      if (value.length === 0) {\n        _this.setState({\n          activeSuggestion: 0,\n          filteredSuggestions: [],\n          showSuggestions: false,\n          value: value,\n          dataCity: [],\n          isLoading: false\n        });\n      } else {\n        _this.setState({\n          activeSuggestion: 0,\n          filteredSuggestions: filterSugest(value, countries),\n          showSuggestions: true,\n          value: value\n        });\n      }\n\n      localStorage.setItem('value', value.charAt(0).toUpperCase() + value.slice(1));\n    };\n\n    _this.onClickAutocomplete = function (e) {\n      var value = e.target.innerText;\n\n      _this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: filterSugest(value, countries),\n        showSuggestions: false,\n        value: value\n      });\n    };\n\n    _this.onKeyDownAutocomplete = function (e) {\n      var _this$state = _this.state,\n          activeSuggestion = _this$state.activeSuggestion,\n          filteredSuggestions = _this$state.filteredSuggestions;\n      var keyCode = e.keyCode;\n\n      if (keyCode === 13 || keyCode === 38 || keyCode === 40) {\n        if (filteredSuggestions.length) {\n          _this.setState({\n            activeSuggestion: 0,\n            showSuggestions: false,\n            value: filteredSuggestions[activeSuggestion].country\n          });\n        }\n      }\n    };\n\n    _this.onSubmitAutocomplete = function (e) {\n      e.preventDefault();\n      var _this$state2 = _this.state,\n          activeSuggestion = _this$state2.activeSuggestion,\n          filteredSuggestions = _this$state2.filteredSuggestions;\n      var code; // // /**FUNKCJA DO POBIERANIA  */\n      // const abs = countries.filter(item => item.country === localStorage.getItem('value'));\n      // console.log(abs[0].code);\n\n      if (filteredSuggestions.length) {\n        _this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          value: filteredSuggestions[activeSuggestion].country || localStorage.getItem('value'),\n          isLoading: true\n        });\n\n        var _filteredSuggestions = _slicedToArray(filteredSuggestions, 1),\n            _code = _filteredSuggestions[0].code;\n\n        _this.dataPollutedCities(_code);\n      } else if (localStorage.length) {\n        _this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          value: localStorage.getItem('value'),\n          isLoading: true\n        });\n\n        var _e = filterSugest(localStorage.getItem('value'), countries);\n\n        console.log(_e);\n\n        var _code2 = countries.filter(function (item) {\n          return item.country === localStorage.getItem('value');\n        });\n\n        console.log(_code2);\n      }\n    };\n\n    _this.dataPollutedCities = function (query) {\n      return getAllPollutedCities(query, fullDate).then(function (_ref) {\n        var results = _ref.results;\n        setTimeout(function () {\n          _this.setState({\n            dataCity: removeDuplicateValues(results),\n            isLoading: false\n          });\n        }, 500);\n      }).catch(function () {\n        return _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var onChangeAutocomplete = this.onChangeAutocomplete,\n          onClickAutocomplete = this.onClickAutocomplete,\n          onKeyDownAutocomplete = this.onKeyDownAutocomplete,\n          onSubmitAutocomplete = this.onSubmitAutocomplete,\n          state = this.state;\n      var dataCity = state.dataCity,\n          isLoading = state.isLoading;\n      return React.createElement(\"div\", {\n        className: styled.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Autocomplete, {\n        onChange: onChangeAutocomplete,\n        onClick: onClickAutocomplete,\n        onKeyDown: onKeyDownAutocomplete,\n        onSubmit: onSubmitAutocomplete,\n        data: state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), isLoading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }) : dataCity.length ? React.createElement(List, {\n        cities: dataCity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/dawidgola/Desktop/pollutedCitiesApp/src/components/App/App.js"],"names":["React","Component","Autocomplete","Header","List","Loader","countries","getAllPollutedCities","filteredSuggestions","filterSugest","getFullDate","fullDate","removeDuplicateValues","styled","App","state","activeSuggestion","showSuggestions","value","localStorage","getItem","dataCity","isLoading","onChangeAutocomplete","e","target","length","setState","setItem","charAt","toUpperCase","slice","onClickAutocomplete","innerText","onKeyDownAutocomplete","keyCode","country","onSubmitAutocomplete","preventDefault","code","dataPollutedCities","console","log","filter","item","query","then","results","setTimeout","catch","wrapper"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Autocomplete from \"../AutocompleteInput/Autocomplete\";\r\nimport Header from \"../Header/Header\";\r\nimport List from \"../List/List\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { countries } from \"../../assets/dataCountry/dataCountry\";\r\nimport { getAllPollutedCities } from \"../../assets/api/api\";\r\nimport { filteredSuggestions as filterSugest, getFullDate as fullDate, removeDuplicateValues } from \"../../assets/helpers/helper\";\r\nimport styled from \"../App/app.module.scss\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    activeSuggestion: 0,\r\n    filteredSuggestions: [],\r\n    showSuggestions: false,\r\n    value: localStorage.getItem('value') || '',\r\n    dataCity:[],\r\n    isLoading: false,\r\n  };\r\n\r\n  onChangeAutocomplete = e => {\r\n    const { value } = e.target;\r\n\r\n    if(value.length === 0) {\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: [],\r\n        showSuggestions: false,\r\n        value,\r\n        dataCity: [],\r\n        isLoading: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: filterSugest(value,countries),\r\n        showSuggestions: true,\r\n        value\r\n      });\r\n    }\r\n\r\n    localStorage.setItem('value', value.charAt(0).toUpperCase() + value.slice(1));\r\n  };\r\n\r\n  onClickAutocomplete = e => {\r\n    const value = e.target.innerText;\r\n\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: filterSugest(value,countries),\r\n      showSuggestions: false,\r\n      value\r\n    });\r\n  };\r\n\r\n  onKeyDownAutocomplete = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n    const { keyCode } = e;\r\n\r\n    if (keyCode === 13 || keyCode === 38 || keyCode === 40) {\r\n      if (filteredSuggestions.length) {\r\n        this.setState({\r\n          activeSuggestion: 0,\r\n          showSuggestions: false,\r\n          value: filteredSuggestions[activeSuggestion].country\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSubmitAutocomplete = (e) => {\r\n    e.preventDefault();\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n    let code;\r\n\r\n      // // /**FUNKCJA DO POBIERANIA  */\r\n      // const abs = countries.filter(item => item.country === localStorage.getItem('value'));\r\n      // console.log(abs[0].code);\r\n\r\n    if (filteredSuggestions.length) {\r\n        this.setState({\r\n          activeSuggestion: 0,\r\n          showSuggestions: false,\r\n          value: filteredSuggestions[activeSuggestion].country || localStorage.getItem('value'),\r\n          isLoading: true\r\n        });\r\n\r\n        const [{ code }] = filteredSuggestions;\r\n        this.dataPollutedCities(code);\r\n\r\n    } else if (localStorage.length) {\r\n        this.setState({\r\n          activeSuggestion: 0,\r\n          showSuggestions: false,\r\n          value: localStorage.getItem('value'),\r\n          isLoading: true\r\n        });\r\n        const e = filterSugest(localStorage.getItem('value'),countries)\r\n        console.log(e)\r\n        const code = countries.filter(item => item.country === localStorage.getItem('value'));\r\n        console.log(code);\r\n    }\r\n  }\r\n\r\n  dataPollutedCities = query => {\r\n    return getAllPollutedCities(query,fullDate)\r\n      .then(({results}) => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            dataCity: removeDuplicateValues(results),\r\n            isLoading: false\r\n          })\r\n        },500)\r\n      }).catch(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChangeAutocomplete,\r\n      onClickAutocomplete,\r\n      onKeyDownAutocomplete,\r\n      onSubmitAutocomplete,\r\n      state\r\n    } = this;\r\n    const { dataCity, isLoading } = state;\r\n    return (\r\n      <div className={styled.wrapper}>\r\n        <Header/>\r\n        <Autocomplete\r\n          onChange={onChangeAutocomplete}\r\n          onClick={onClickAutocomplete}\r\n          onKeyDown={onKeyDownAutocomplete}\r\n          onSubmit={onSubmitAutocomplete}\r\n          data={state}\r\n        />\r\n        {isLoading ? <Loader/> : dataCity.length ? <List cities={dataCity}/> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}